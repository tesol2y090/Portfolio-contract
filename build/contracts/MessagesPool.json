{
  "contractName": "MessagesPool",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IGANGToken",
          "name": "_GANGTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "PostSucceed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "gangTokenModule",
      "outputs": [
        {
          "internalType": "contract IGANGToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messagesPool",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsTokenModule",
      "outputs": [
        {
          "internalType": "contract IRewardsToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRewardsToken",
          "name": "_rewardsTokenAddress",
          "type": "address"
        }
      ],
      "name": "setRewardTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMessagesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "postMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IGANGToken\",\"name\":\"_GANGTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"PostSucceed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"gangTokenModule\",\"outputs\":[{\"internalType\":\"contract IGANGToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMessagesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messagesPool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"postMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsTokenModule\",\"outputs\":[{\"internalType\":\"contract IRewardsToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRewardsToken\",\"name\":\"_rewardsTokenAddress\",\"type\":\"address\"}],\"name\":\"setRewardTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/kantapatchankasem/playground/portfolio-contract/contracts/MessagesPool.sol\":\"MessagesPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/kantapatchankasem/playground/portfolio-contract/contracts/GSN/Context.sol\":{\"keccak256\":\"0x78f766fdd27b5ac7540fd0cde3c91a9317fa8c5aa1fbbc0f8849d4a69112372d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c7666fe0832e1efd9173a1f7e6c500369f4eff941627a36ce7c49efa34b937d\",\"dweb:/ipfs/QmeD68mDYFN2QdRDNoAhzomW3V3N7Vg6cFu1UTKpmii71m\"]},\"/Users/kantapatchankasem/playground/portfolio-contract/contracts/MessagesPool.sol\":{\"keccak256\":\"0xb4a70779b2e8886e63f12e7189a108bf688b73595c652a76c4f247db4443ddf6\",\"urls\":[\"bzz-raw://6cf0095ac06abbebdf2d275a48ccc3dc9f675ecea979d7052a8fcd4ccf38d494\",\"dweb:/ipfs/QmQRa4KPHcCDDymJHijiS8Na1Bk5SwUDe3mxEanG6mUo18\"]},\"/Users/kantapatchankasem/playground/portfolio-contract/contracts/interfaces/IGANGToken.sol\":{\"keccak256\":\"0xe80e876da1e459a9adf15cfc84337c3677ac5c5bc7572c2451762dd6615a1bb8\",\"urls\":[\"bzz-raw://b927041c518c85dbd99ae9921cb5d54e8233a0c9da570c1d8d21478ad8bf7177\",\"dweb:/ipfs/QmYtFHozRf5RA179h4s6prCq34M32dS1PRf9RZXhpqTb46\"]},\"/Users/kantapatchankasem/playground/portfolio-contract/contracts/interfaces/IRewardsToken.sol\":{\"keccak256\":\"0x284dfe9948d32db5e03dbf533571e8385bbcf5a5d4f2c731223e17555404143f\",\"urls\":[\"bzz-raw://e4c39d7be9fd98e2334c3b84ab72696425f2b800a2e65ba808052efe9f1b013e\",\"dweb:/ipfs/QmPpAJM2PSMLnh6itjsXZsoQjhjGR5Yj7NPv8zNKSMdvRn\"]},\"/Users/kantapatchankasem/playground/portfolio-contract/contracts/utility/Ownable.sol\":{\"keccak256\":\"0xe2cd50e8e53f884d1e45232e1f51472a159bb47c2b0032682155b10d52d0392d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c69b00187dc2c52a0832a881130e681b6e42dd8c19dd10e3e13cead95721d49c\",\"dweb:/ipfs/QmdbBHgMAn71GiRyrrLM2riqjkUgNUHu7gkBnKJ3bMs5fz\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610dd7380380610dd78339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600061005461013960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610141565b600033905090565b610c87806101506000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461021a5780638f32d59b146102645780639a6acf2014610286578063c106fb4b146102ca578063f2fde38b146103715761009e565b8063275c7b8a146100a35780633bb32d54146100ed5780635fb372151461010b5780636630f88f14610155578063715018a614610210575b600080fd5b6100ab6103b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100f56103db565b6040518082815260200191505060405180910390f35b6101136103e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020e6004803603602081101561016b57600080fd5b810190808035906020019064010000000081111561018857600080fd5b82018360208201111561019a57600080fd5b803590602001918460018302840111640100000000831117156101bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061040e565b005b6102186106f7565b005b610222610830565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61026c610859565b604051808215151515815260200191505060405180910390f35b6102c86004803603602081101561029c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b7565b005b6102f6600480360360208110156102e057600080fd5b81019080803590602001909291905050506108fb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033657808201518184015260208101905061031b565b50505050905090810190601f1680156103635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103b36004803603602081101561038757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109b4565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180549050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f796f752061726520706f737420616c726561647900000000000000000000000081525060200191505060405180910390fd5b600181908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610509929190610b86565b506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f193360016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050507f7e4ee71621e31e4cd00e26c61d7786337dd8e4731c0a164a9098e7bf988fe7c33382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106b957808201518184015260208101905061069e565b50505050905090810190601f1680156106e65780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b6106ff610859565b610771576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661089b610a3a565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001818154811061090857fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b505050505081565b6109bc610859565b610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610a3781610a42565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ac8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610c2c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610bc757805160ff1916838001178555610bf5565b82800160010185558215610bf5579182015b82811115610bf4578251825591602001919060010190610bd9565b5b509050610c029190610c06565b5090565b610c2891905b80821115610c24576000816000905550600101610c0c565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212204c90a79209317d2c1732f253c55e5af5b67e4e135e9fbb3424ae287c4b9680fc64736f6c63430006090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461021a5780638f32d59b146102645780639a6acf2014610286578063c106fb4b146102ca578063f2fde38b146103715761009e565b8063275c7b8a146100a35780633bb32d54146100ed5780635fb372151461010b5780636630f88f14610155578063715018a614610210575b600080fd5b6100ab6103b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100f56103db565b6040518082815260200191505060405180910390f35b6101136103e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020e6004803603602081101561016b57600080fd5b810190808035906020019064010000000081111561018857600080fd5b82018360208201111561019a57600080fd5b803590602001918460018302840111640100000000831117156101bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061040e565b005b6102186106f7565b005b610222610830565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61026c610859565b604051808215151515815260200191505060405180910390f35b6102c86004803603602081101561029c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b7565b005b6102f6600480360360208110156102e057600080fd5b81019080803590602001909291905050506108fb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033657808201518184015260208101905061031b565b50505050905090810190601f1680156103635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103b36004803603602081101561038757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109b4565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180549050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f796f752061726520706f737420616c726561647900000000000000000000000081525060200191505060405180910390fd5b600181908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610509929190610b86565b506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f193360016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050507f7e4ee71621e31e4cd00e26c61d7786337dd8e4731c0a164a9098e7bf988fe7c33382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106b957808201518184015260208101905061069e565b50505050905090810190601f1680156106e65780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b6106ff610859565b610771576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661089b610a3a565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001818154811061090857fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b505050505081565b6109bc610859565b610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610a3781610a42565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ac8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610c2c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610bc757805160ff1916838001178555610bf5565b82800160010185558215610bf5579182015b82811115610bf4578251825591602001919060010190610bd9565b5b509050610c029190610c06565b5090565b610c2891905b80821115610c24576000816000905550600101610c0c565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212204c90a79209317d2c1732f253c55e5af5b67e4e135e9fbb3424ae287c4b9680fc64736f6c63430006090033",
  "immutableReferences": {},
  "sourceMap": "136:912:2:-:0;;;394:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:17:9;751:12;:10;;;:12;;:::i;:::-;731:32;;782:9;773:6;;:18;;;;;;;;;;;;;;;;;;839:9;806:43;;835:1;806:43;;;;;;;;;;;;697:159;471:17:2;453:15;;:35;;;;;;;;;;;;;;;;;;394:101;136:912;;768:104:1;821:15;855:10;848:17;;768:104;:::o;136:912:2:-;;;;;;;",
  "deployedSourceMap": "136:912:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;639:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;255:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;747:299;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1717:145:9;;;:::i;:::-;;932:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1283:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;501:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;175:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:115:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;294:39:2;;;;;;;;;;;;;:::o;639:102::-;689:7;715:12;:19;;;;708:26;;639:102;:::o;255:33::-;;;;;;;;;;;;;:::o;747:299::-;817:14;:26;832:10;817:26;;;;;;;;;;;;;;;;;;;;;;;;;816:27;808:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;878:12;896:7;878:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;943:4;914:14;:26;929:10;914:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;957:15;;;;;;;;;;;:20;;;978:10;990:1;957:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:32;1019:10;1031:7;1007:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;747:299;:::o;1717:145:9:-;1136:9;:7;:9::i;:::-;1128:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;932:77::-;970:7;996:6;;;;;;;;;;;989:13;;932:77;:::o;1283:92::-;1323:4;1362:6;;;;;;;;;;;1346:22;;:12;:10;:12::i;:::-;:22;;;1339:29;;1283:92;:::o;501:132:2:-;606:20;585:18;;:41;;;;;;;;;;;;;;;;;;501:132;:::o;175:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2011:115:9:-;1136:9;:7;:9::i;:::-;1128:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:28:::1;2110:8;2091:18;:28::i;:::-;2011:115:::0;:::o;768:104:1:-;821:15;855:10;848:17;;768:104;:::o;2227:233:9:-;2328:1;2308:22;;:8;:22;;;;2300:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:8;2388:38;;2409:6;;;;;;;;;;;2388:38;;;;;;;;;;;;2445:8;2436:6;;:17;;;;;;;;;;;;;;;;;;2227:233;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.6.9;\n\nimport \"./interfaces/IGANGToken.sol\";\nimport \"./interfaces/IRewardsToken.sol\";\nimport \"./utility/Ownable.sol\";\n\ncontract MessagesPool is Ownable {\n    string[] public messagesPool;\n    mapping(address => bool) isWriteMessage;\n\n    IGANGToken public gangTokenModule;\n    IRewardsToken public rewardsTokenModule;\n\n    event PostSucceed(address user, string message);\n\n    constructor(IGANGToken _GANGTokenAddress) public {\n        gangTokenModule = _GANGTokenAddress;\n    }\n\n    function setRewardTokenAddress(IRewardsToken _rewardsTokenAddress) public {\n        rewardsTokenModule = _rewardsTokenAddress;\n    }\n\n    function getMessagesLength() public view returns (uint256) {\n        return messagesPool.length;\n    }\n\n    function postMessage(string memory message) public {\n        require(!isWriteMessage[msg.sender], \"you are post already\");\n        messagesPool.push(message);\n        isWriteMessage[msg.sender] = true;\n        gangTokenModule.mint(msg.sender, 1);\n        emit PostSucceed(msg.sender, message);\n    }\n}\n",
  "sourcePath": "/Users/kantapatchankasem/playground/portfolio-contract/contracts/MessagesPool.sol",
  "ast": {
    "absolutePath": "/Users/kantapatchankasem/playground/portfolio-contract/contracts/MessagesPool.sol",
    "exportedSymbols": {
      "MessagesPool": [
        146
      ]
    },
    "id": 147,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 52,
        "literals": [
          "solidity",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "/Users/kantapatchankasem/playground/portfolio-contract/contracts/interfaces/IGANGToken.sol",
        "file": "./interfaces/IGANGToken.sol",
        "id": 53,
        "nodeType": "ImportDirective",
        "scope": 147,
        "sourceUnit": 275,
        "src": "24:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kantapatchankasem/playground/portfolio-contract/contracts/interfaces/IRewardsToken.sol",
        "file": "./interfaces/IRewardsToken.sol",
        "id": 54,
        "nodeType": "ImportDirective",
        "scope": 147,
        "sourceUnit": 285,
        "src": "62:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kantapatchankasem/playground/portfolio-contract/contracts/utility/Ownable.sol",
        "file": "./utility/Ownable.sol",
        "id": 55,
        "nodeType": "ImportDirective",
        "scope": 147,
        "sourceUnit": 1220,
        "src": "103:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 56,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1219,
              "src": "161:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1219",
                "typeString": "contract Ownable"
              }
            },
            "id": 57,
            "nodeType": "InheritanceSpecifier",
            "src": "161:7:2"
          }
        ],
        "contractDependencies": [
          50,
          1219
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 146,
        "linearizedBaseContracts": [
          146,
          1219,
          50
        ],
        "name": "MessagesPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c106fb4b",
            "id": 60,
            "mutability": "mutable",
            "name": "messagesPool",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 146,
            "src": "175:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 58,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "175:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 59,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "175:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 64,
            "mutability": "mutable",
            "name": "isWriteMessage",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 146,
            "src": "209:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 61,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "217:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "209:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 62,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "228:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "5fb37215",
            "id": 66,
            "mutability": "mutable",
            "name": "gangTokenModule",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 146,
            "src": "255:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IGANGToken_$274",
              "typeString": "contract IGANGToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 65,
              "name": "IGANGToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 274,
              "src": "255:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGANGToken_$274",
                "typeString": "contract IGANGToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "275c7b8a",
            "id": 68,
            "mutability": "mutable",
            "name": "rewardsTokenModule",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 146,
            "src": "294:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRewardsToken_$284",
              "typeString": "contract IRewardsToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 67,
              "name": "IRewardsToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 284,
              "src": "294:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRewardsToken_$284",
                "typeString": "contract IRewardsToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 74,
            "name": "PostSucceed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "358:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "372:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "357:30:2"
            },
            "src": "340:48:2"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "443:52:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "gangTokenModule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "453:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGANGToken_$274",
                        "typeString": "contract IGANGToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "_GANGTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "471:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGANGToken_$274",
                        "typeString": "contract IGANGToken"
                      }
                    },
                    "src": "453:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGANGToken_$274",
                      "typeString": "contract IGANGToken"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "453:35:2"
                }
              ]
            },
            "documentation": null,
            "id": 84,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_GANGTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 84,
                  "src": "406:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGANGToken_$274",
                    "typeString": "contract IGANGToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 75,
                    "name": "IGANGToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 274,
                    "src": "406:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGANGToken_$274",
                      "typeString": "contract IGANGToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "405:30:2"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:0:2"
            },
            "scope": 146,
            "src": "394:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "575:58:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "rewardsTokenModule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "585:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardsToken_$284",
                        "typeString": "contract IRewardsToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "_rewardsTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "606:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardsToken_$284",
                        "typeString": "contract IRewardsToken"
                      }
                    },
                    "src": "585:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewardsToken_$284",
                      "typeString": "contract IRewardsToken"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "585:41:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9a6acf20",
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRewardTokenAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_rewardsTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 94,
                  "src": "532:34:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRewardsToken_$284",
                    "typeString": "contract IRewardsToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 85,
                    "name": "IRewardsToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 284,
                    "src": "532:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewardsToken_$284",
                      "typeString": "contract IRewardsToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "531:36:2"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:0:2"
            },
            "scope": 146,
            "src": "501:132:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "698:43:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "messagesPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "715:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "715:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "708:26:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3bb32d54",
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessagesLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:2:2"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "689:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "688:9:2"
            },
            "scope": 146,
            "src": "639:102:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "798:248:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "816:27:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 109,
                            "name": "isWriteMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "817:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 112,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 110,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "832:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "832:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "817:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f752061726520706f737420616c7265616479",
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "845:22:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a06bcb4e9acfe8496fa35e379fb59f9f566c68d7b779d0be37d6b6ebf4ff5604",
                          "typeString": "literal_string \"you are post already\""
                        },
                        "value": "you are post already"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a06bcb4e9acfe8496fa35e379fb59f9f566c68d7b779d0be37d6b6ebf4ff5604",
                          "typeString": "literal_string \"you are post already\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "808:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "808:60:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "896:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "messagesPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "878:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "878:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "878:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "isWriteMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "914:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 126,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "929:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "929:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "914:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "943:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "914:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "914:33:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "978:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "978:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "990:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "gangTokenModule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "957:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGANGToken_$274",
                          "typeString": "contract IGANGToken"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 273,
                      "src": "957:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "957:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "957:35:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1019:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1019:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1031:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 138,
                      "name": "PostSucceed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1007:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "EmitStatement",
                  "src": "1002:37:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6630f88f",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 145,
                  "src": "768:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "767:23:2"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:0:2"
            },
            "scope": 146,
            "src": "747:299:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 147,
        "src": "136:912:2"
      }
    ],
    "src": "0:1049:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/kantapatchankasem/playground/portfolio-contract/contracts/MessagesPool.sol",
      "exportedSymbols": {
        "MessagesPool": [
          146
        ]
      },
      "license": null
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".9"
          ]
        },
        "id": 52,
        "name": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "attributes": {
          "SourceUnit": 275,
          "absolutePath": "/Users/kantapatchankasem/playground/portfolio-contract/contracts/interfaces/IGANGToken.sol",
          "file": "./interfaces/IGANGToken.sol",
          "scope": 147,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 53,
        "name": "ImportDirective",
        "src": "24:37:2"
      },
      {
        "attributes": {
          "SourceUnit": 285,
          "absolutePath": "/Users/kantapatchankasem/playground/portfolio-contract/contracts/interfaces/IRewardsToken.sol",
          "file": "./interfaces/IRewardsToken.sol",
          "scope": 147,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 54,
        "name": "ImportDirective",
        "src": "62:40:2"
      },
      {
        "attributes": {
          "SourceUnit": 1220,
          "absolutePath": "/Users/kantapatchankasem/playground/portfolio-contract/contracts/utility/Ownable.sol",
          "file": "./utility/Ownable.sol",
          "scope": 147,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 55,
        "name": "ImportDirective",
        "src": "103:31:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            50,
            1219
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            146,
            1219,
            50
          ],
          "name": "MessagesPool",
          "scope": 147
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 1219,
                  "type": "contract Ownable"
                },
                "id": 56,
                "name": "UserDefinedTypeName",
                "src": "161:7:2"
              }
            ],
            "id": 57,
            "name": "InheritanceSpecifier",
            "src": "161:7:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "c106fb4b",
              "mutability": "mutable",
              "name": "messagesPool",
              "overrides": null,
              "scope": 146,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "string[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 58,
                    "name": "ElementaryTypeName",
                    "src": "175:6:2"
                  }
                ],
                "id": 59,
                "name": "ArrayTypeName",
                "src": "175:8:2"
              }
            ],
            "id": 60,
            "name": "VariableDeclaration",
            "src": "175:28:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "isWriteMessage",
              "overrides": null,
              "scope": 146,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 61,
                    "name": "ElementaryTypeName",
                    "src": "217:7:2"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 62,
                    "name": "ElementaryTypeName",
                    "src": "228:4:2"
                  }
                ],
                "id": 63,
                "name": "Mapping",
                "src": "209:24:2"
              }
            ],
            "id": 64,
            "name": "VariableDeclaration",
            "src": "209:39:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "5fb37215",
              "mutability": "mutable",
              "name": "gangTokenModule",
              "overrides": null,
              "scope": 146,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IGANGToken",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IGANGToken",
                  "referencedDeclaration": 274,
                  "type": "contract IGANGToken"
                },
                "id": 65,
                "name": "UserDefinedTypeName",
                "src": "255:10:2"
              }
            ],
            "id": 66,
            "name": "VariableDeclaration",
            "src": "255:33:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "275c7b8a",
              "mutability": "mutable",
              "name": "rewardsTokenModule",
              "overrides": null,
              "scope": 146,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IRewardsToken",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IRewardsToken",
                  "referencedDeclaration": 284,
                  "type": "contract IRewardsToken"
                },
                "id": 67,
                "name": "UserDefinedTypeName",
                "src": "294:13:2"
              }
            ],
            "id": 68,
            "name": "VariableDeclaration",
            "src": "294:39:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "PostSucceed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "user",
                      "overrides": null,
                      "scope": 74,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 69,
                        "name": "ElementaryTypeName",
                        "src": "358:7:2"
                      }
                    ],
                    "id": 70,
                    "name": "VariableDeclaration",
                    "src": "358:12:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "message",
                      "overrides": null,
                      "scope": 74,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 71,
                        "name": "ElementaryTypeName",
                        "src": "372:6:2"
                      }
                    ],
                    "id": 72,
                    "name": "VariableDeclaration",
                    "src": "372:14:2"
                  }
                ],
                "id": 73,
                "name": "ParameterList",
                "src": "357:30:2"
              }
            ],
            "id": 74,
            "name": "EventDefinition",
            "src": "340:48:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "overrides": null,
              "scope": 146,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_GANGTokenAddress",
                      "overrides": null,
                      "scope": 84,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IGANGToken",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IGANGToken",
                          "referencedDeclaration": 274,
                          "type": "contract IGANGToken"
                        },
                        "id": 75,
                        "name": "UserDefinedTypeName",
                        "src": "406:10:2"
                      }
                    ],
                    "id": 76,
                    "name": "VariableDeclaration",
                    "src": "406:28:2"
                  }
                ],
                "id": 77,
                "name": "ParameterList",
                "src": "405:30:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 78,
                "name": "ParameterList",
                "src": "443:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IGANGToken"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 66,
                              "type": "contract IGANGToken",
                              "value": "gangTokenModule"
                            },
                            "id": 79,
                            "name": "Identifier",
                            "src": "453:15:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 76,
                              "type": "contract IGANGToken",
                              "value": "_GANGTokenAddress"
                            },
                            "id": 80,
                            "name": "Identifier",
                            "src": "471:17:2"
                          }
                        ],
                        "id": 81,
                        "name": "Assignment",
                        "src": "453:35:2"
                      }
                    ],
                    "id": 82,
                    "name": "ExpressionStatement",
                    "src": "453:35:2"
                  }
                ],
                "id": 83,
                "name": "Block",
                "src": "443:52:2"
              }
            ],
            "id": 84,
            "name": "FunctionDefinition",
            "src": "394:101:2"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "9a6acf20",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setRewardTokenAddress",
              "overrides": null,
              "scope": 146,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_rewardsTokenAddress",
                      "overrides": null,
                      "scope": 94,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IRewardsToken",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IRewardsToken",
                          "referencedDeclaration": 284,
                          "type": "contract IRewardsToken"
                        },
                        "id": 85,
                        "name": "UserDefinedTypeName",
                        "src": "532:13:2"
                      }
                    ],
                    "id": 86,
                    "name": "VariableDeclaration",
                    "src": "532:34:2"
                  }
                ],
                "id": 87,
                "name": "ParameterList",
                "src": "531:36:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 88,
                "name": "ParameterList",
                "src": "575:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IRewardsToken"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 68,
                              "type": "contract IRewardsToken",
                              "value": "rewardsTokenModule"
                            },
                            "id": 89,
                            "name": "Identifier",
                            "src": "585:18:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 86,
                              "type": "contract IRewardsToken",
                              "value": "_rewardsTokenAddress"
                            },
                            "id": 90,
                            "name": "Identifier",
                            "src": "606:20:2"
                          }
                        ],
                        "id": 91,
                        "name": "Assignment",
                        "src": "585:41:2"
                      }
                    ],
                    "id": 92,
                    "name": "ExpressionStatement",
                    "src": "585:41:2"
                  }
                ],
                "id": 93,
                "name": "Block",
                "src": "575:58:2"
              }
            ],
            "id": 94,
            "name": "FunctionDefinition",
            "src": "501:132:2"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "3bb32d54",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getMessagesLength",
              "overrides": null,
              "scope": 146,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 95,
                "name": "ParameterList",
                "src": "665:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 103,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 96,
                        "name": "ElementaryTypeName",
                        "src": "689:7:2"
                      }
                    ],
                    "id": 97,
                    "name": "VariableDeclaration",
                    "src": "689:7:2"
                  }
                ],
                "id": 98,
                "name": "ParameterList",
                "src": "688:9:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 98
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "length",
                          "referencedDeclaration": null,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 60,
                              "type": "string storage ref[] storage ref",
                              "value": "messagesPool"
                            },
                            "id": 99,
                            "name": "Identifier",
                            "src": "715:12:2"
                          }
                        ],
                        "id": 100,
                        "name": "MemberAccess",
                        "src": "715:19:2"
                      }
                    ],
                    "id": 101,
                    "name": "Return",
                    "src": "708:26:2"
                  }
                ],
                "id": 102,
                "name": "Block",
                "src": "698:43:2"
              }
            ],
            "id": 103,
            "name": "FunctionDefinition",
            "src": "639:102:2"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "6630f88f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "postMessage",
              "overrides": null,
              "scope": 146,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "message",
                      "overrides": null,
                      "scope": 145,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 104,
                        "name": "ElementaryTypeName",
                        "src": "768:6:2"
                      }
                    ],
                    "id": 105,
                    "name": "VariableDeclaration",
                    "src": "768:21:2"
                  }
                ],
                "id": 106,
                "name": "ParameterList",
                "src": "767:23:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 107,
                "name": "ParameterList",
                "src": "798:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a06bcb4e9acfe8496fa35e379fb59f9f566c68d7b779d0be37d6b6ebf4ff5604",
                                  "typeString": "literal_string \"you are post already\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 108,
                            "name": "Identifier",
                            "src": "808:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 64,
                                      "type": "mapping(address => bool)",
                                      "value": "isWriteMessage"
                                    },
                                    "id": 109,
                                    "name": "Identifier",
                                    "src": "817:14:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 110,
                                        "name": "Identifier",
                                        "src": "832:3:2"
                                      }
                                    ],
                                    "id": 111,
                                    "name": "MemberAccess",
                                    "src": "832:10:2"
                                  }
                                ],
                                "id": 112,
                                "name": "IndexAccess",
                                "src": "817:26:2"
                              }
                            ],
                            "id": 113,
                            "name": "UnaryOperation",
                            "src": "816:27:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "796f752061726520706f737420616c7265616479",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"you are post already\"",
                              "value": "you are post already"
                            },
                            "id": 114,
                            "name": "Literal",
                            "src": "845:22:2"
                          }
                        ],
                        "id": 115,
                        "name": "FunctionCall",
                        "src": "808:60:2"
                      }
                    ],
                    "id": 116,
                    "name": "ExpressionStatement",
                    "src": "808:60:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (string storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 60,
                                  "type": "string storage ref[] storage ref",
                                  "value": "messagesPool"
                                },
                                "id": 117,
                                "name": "Identifier",
                                "src": "878:12:2"
                              }
                            ],
                            "id": 119,
                            "name": "MemberAccess",
                            "src": "878:17:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 105,
                              "type": "string memory",
                              "value": "message"
                            },
                            "id": 120,
                            "name": "Identifier",
                            "src": "896:7:2"
                          }
                        ],
                        "id": 121,
                        "name": "FunctionCall",
                        "src": "878:26:2"
                      }
                    ],
                    "id": 122,
                    "name": "ExpressionStatement",
                    "src": "878:26:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 64,
                                  "type": "mapping(address => bool)",
                                  "value": "isWriteMessage"
                                },
                                "id": 123,
                                "name": "Identifier",
                                "src": "914:14:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 124,
                                    "name": "Identifier",
                                    "src": "929:3:2"
                                  }
                                ],
                                "id": 125,
                                "name": "MemberAccess",
                                "src": "929:10:2"
                              }
                            ],
                            "id": 126,
                            "name": "IndexAccess",
                            "src": "914:26:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 127,
                            "name": "Literal",
                            "src": "943:4:2"
                          }
                        ],
                        "id": 128,
                        "name": "Assignment",
                        "src": "914:33:2"
                      }
                    ],
                    "id": 129,
                    "name": "ExpressionStatement",
                    "src": "914:33:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 273,
                              "type": "function (address,uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 66,
                                  "type": "contract IGANGToken",
                                  "value": "gangTokenModule"
                                },
                                "id": 130,
                                "name": "Identifier",
                                "src": "957:15:2"
                              }
                            ],
                            "id": 132,
                            "name": "MemberAccess",
                            "src": "957:20:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 133,
                                "name": "Identifier",
                                "src": "978:3:2"
                              }
                            ],
                            "id": 134,
                            "name": "MemberAccess",
                            "src": "978:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 135,
                            "name": "Literal",
                            "src": "990:1:2"
                          }
                        ],
                        "id": 136,
                        "name": "FunctionCall",
                        "src": "957:35:2"
                      }
                    ],
                    "id": 137,
                    "name": "ExpressionStatement",
                    "src": "957:35:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 74,
                              "type": "function (address,string memory)",
                              "value": "PostSucceed"
                            },
                            "id": 138,
                            "name": "Identifier",
                            "src": "1007:11:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 139,
                                "name": "Identifier",
                                "src": "1019:3:2"
                              }
                            ],
                            "id": 140,
                            "name": "MemberAccess",
                            "src": "1019:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 105,
                              "type": "string memory",
                              "value": "message"
                            },
                            "id": 141,
                            "name": "Identifier",
                            "src": "1031:7:2"
                          }
                        ],
                        "id": 142,
                        "name": "FunctionCall",
                        "src": "1007:32:2"
                      }
                    ],
                    "id": 143,
                    "name": "EmitStatement",
                    "src": "1002:37:2"
                  }
                ],
                "id": 144,
                "name": "Block",
                "src": "798:248:2"
              }
            ],
            "id": 145,
            "name": "FunctionDefinition",
            "src": "747:299:2"
          }
        ],
        "id": 146,
        "name": "ContractDefinition",
        "src": "136:912:2"
      }
    ],
    "id": 147,
    "name": "SourceUnit",
    "src": "0:1049:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.9+commit.3e3065ac.Linux.g++"
  },
  "networks": {
    "1618240048777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x7e4ee71621e31e4cd00e26c61d7786337dd8e4731c0a164a9098e7bf988fe7c3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "PostSucceed",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC4711D2d608fA5a563f577c2EC2201f81f7912b5",
      "transactionHash": "0x640dfa143f4e135e83bf73c67eae4198bd8545ca0d6d037c7856cd1c9d9321d2"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-12T20:42:56.627Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}